Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import json
from jupyterquiz import display_quiz

quiz_json = '''
[
  {
    "question": "במהלך ניקוי נתוני ניסוי בפיזיקה נרצה להמיר עמודת <code>efficiency</code> שמכילה מחרוזות כמו '10%', ' 15% ', 'n/a' לערכים מספריים תקינים בין 0 ל־1, כדי שנוכל לבצע חישובים מדויקים של נצילות.<br><br>איזה רצף פעולות מתאים ביותר?",
    "type": "many_choice",
    "answers": [
      {
        "answer": "להסיר רווחים ו־% עם str.strip() ו־str.replace(), להמיר בעזרת pd.to_numeric(errors='coerce'), לחלק ב־100 ולמלא חסרים עם fillna(0)",
        "correct": true,
        "feedback": "נכון! זהו רצף הניקוי התקני בנתונים פיזיקליים: הסרת סימני אחוז, המרה למספרים, נירמול לטווח 0–1 והשלמת ערכים חסרים."
      },
      {
        "answer": "להשתמש ישירות ב־astype(float) על העמודה המקורית",
        "correct": false,
        "feedback": "לא מדויק — המרה ישירה תיכשל מאחר והעמודה מכילה תווים לא מספריים כמו '%' ו־'n/a'."
      },
      {
        "answer": "להשתמש ב־df.dropna() כדי למחוק את כל המדידות החסרות במקום לנקות אותן",
        "correct": false,
        "feedback": "לא נכון — השמטת שורות עלולה לגרום לאובדן נתונים; עדיף לנקות ולהשלים ערכים חסרים."
      },
      {
        "answer": "להמיר את הערכים ל־datetime כדי לבדוק זמני מדידה",
        "correct": false,
        "feedback": "לא רלוונטי — כאן מדובר בהמרת אחוזי נצילות, לא בתאריכים."
      }
    ]
  }
]
'''

myquiz = json.loads(quiz_json)
display_quiz(myquiz)

------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[8][39m[32m, line 2[39m
[32m      1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mjson[39;00m
[32m----> [39m[32m2[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mjupyterquiz[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m display_quiz
[32m      4[39m quiz_json = [33m'''[39m
[32m      5[39m [33m[[39m
[32m      6[39m [33m  [39m[33m{[39m
[32m   (...)[39m[32m     32[39m [33m][39m
[32m     33[39m [33m'''[39m
[32m     35[39m myquiz = json.loads(quiz_json)

[31mModuleNotFoundError[39m: No module named 'jupyterquiz'

