Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import json
from jupyterquiz import display_quiz

quiz_json = '''
[
  {
    "question": "בטבלת מדידות פיזיקליות יש לנו עמודות <code>mass_kg</code> ו־<code>height_m</code>, ואנו רוצים לחשב עמודה חדשה בשם <code>potential_energy_J</code> לפי הנוסחה הפיזיקלית <b>E = m·g·h</b>, כאשר g = 9.81 m/s².<br><br>מהי הדרך היעילה והנכונה ביותר לבצע את החישוב בצורה וקטורית (ללא לולאות)?",
    "type": "many_choice",
    "answers": [
      {
        "answer": "df['potential_energy_J'] = df['mass_kg'] * 9.81 * df['height_m']",
        "correct": true,
        "feedback": "נכון! זהו חישוב וקטורי מלא — מהיר, יעיל, ונעשה על כל השורות בבת אחת."
      },
      {
        "answer": "for i in range(len(df)): df['potential_energy_J'][i] = df['mass_kg'][i] * 9.81 * df['height_m'][i]",
        "correct": false,
        "feedback": "לא נכון — זהו חישוב בלולאה, איטי מאוד בהשוואה לפעולה וקטורית."
      },
      {
        "answer": "df['potential_energy_J'] = df.apply(lambda x: x['mass_kg'] * 9.81 * x['height_m'], axis=1)",
        "correct": false,
        "feedback": "לא מדויק — אמנם זה יעבוד, אך apply איטית יותר מהפתרון הווקטורי הישיר."
      },
      {
        "answer": "df.loc['potential_energy_J'] = df['mass_kg'] * df['height_m']",
        "correct": false,
        "feedback": "לא נכון — תחביר שגוי; יש ליצור עמודה חדשה ב־df['potential_energy_J'], ולא להשתמש ב־loc עם שם עמודה."
      }
    ]
  }
]
'''

myquiz = json.loads(quiz_json)
display_quiz(myquiz)

------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[7][39m[32m, line 2[39m
[32m      1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mjson[39;00m
[32m----> [39m[32m2[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mjupyterquiz[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m display_quiz
[32m      4[39m quiz_json = [33m'''[39m
[32m      5[39m [33m[[39m
[32m      6[39m [33m  [39m[33m{[39m
[32m   (...)[39m[32m     32[39m [33m][39m
[32m     33[39m [33m'''[39m
[32m     35[39m myquiz = json.loads(quiz_json)

[31mModuleNotFoundError[39m: No module named 'jupyterquiz'

